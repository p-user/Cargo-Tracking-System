services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.0' 
          memory: 2G 

  messagebroker:
    image: rabbitmq:management
    container_name: messagebroker
    hostname: cargotracking-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    restart: always
    ports:
      - "1433:1433"
    networks:
      - app-network

  trackingdb:
    image: postgres:17
    container_name: trackingdb
    environment:
      - POSTGRES_DB=trackingdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=SwN12345678
    ports:
     - "5432:5432"
    restart: always
    networks:
      - app-network
  
  order.api:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: Services/Order/Order.Api/Dockerfile
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080 
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-dev.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123456
      - ConnectionStrings__Database=Server=orderdb,1433;Database=CargoTS_ORDER;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True;
      - MessageBroker__Host=amqp://cargotracking-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - Elasticsearch__Uri=http://elasticsearch:9200
    depends_on:
      - orderdb
      - messagebroker
      - elasticsearch
    ports:
      - "6000:8080"
      - "6060:8081" 
    volumes:
      # - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ./https-dev.pfx:/https/https-dev.pfx:ro

  routing.grpc:
    image: ${DOCKER_REGISTRY-}routinggrpc
    build:
      context: .
      dockerfile: Services/Routing/Routing.gRPC/Dockerfile
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080 
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-dev.pfx 
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123456
      - MessageBroker__Host=amqp://cargotracking-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - Elasticsearch__Uri=http://elasticsearch:9200
    depends_on:
      - messagebroker
      - elasticsearch
    ports:
      - "6002:8080"
      - "6062:8081" 
    volumes:
      # - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ./https-dev.pfx:/https/https-dev.pfx:ro
  tracking.api:
    image: ${DOCKER_REGISTRY-}trackingapi
    build:
      context: .
      dockerfile: Services/Tracking/Tracking.Api/Dockerfile
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080 
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-dev.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123456
      - ConnectionStrings__Database=Server=trackingdb,1433;Database=CargoTS_TRACKING;User Id=sa;Password=SwN12345678;TrustServerCertificate=True;
      - MessageBroker__Host=amqp://cargotracking-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - Elasticsearch__Uri=http://elasticsearch:9200
    depends_on:
      - trackingdb
      - messagebroker
      - elasticsearch
    ports:
      - "6003:8080"
      - "6063:8081" 
    volumes:
      # - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ./https-dev.pfx:/https/https-dev.pfx:ro
  yarpapigateway:
    build:
      context: .
      dockerfile: Gateways/YarpApiGateway/Dockerfile
    image: yarpapigateway
    container_name: yarpapigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:8081;http://+:8080 
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/https-dev.pfx 
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123456
    ports:
      - "6004:8080"
      - "6064:8081"
    depends_on:
      - order.api
      - tracking.api
      - routing.grpc
      - elasticsearch
      - kibana
    volumes:
      # - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ./https-dev.pfx:/https/https-dev.pfx:ro
    networks:
      - app-network

volumes:
  elasticsearch-data:
    driver: local

networks:
  app-network:
    driver: bridge